# POSTWORK 01
library(dplyr) # Cargar paquete

#Establecer directorio de trabajo
setwd("")
dir()

#Cargar archivo en vector
liga<-read.csv("LigaPrimeraDiv-2019-20.csv")
str(liga)

#Seleccionar columnas de interés
goles<-select(liga, FTHG:FTAG)

# A) Elaborar tablas de frecuencias relativas,

# a.1 Obtener tabla de frecuencia absoluta
f.abs <- table(goles)

# a.2 Obtener tabla de frecuencia relativa
(f.rel<- round(prop.table(f.abs, margin=NULL),3))

# a.3 Agregar columna de totales marginales sobre frecuencia relativa
(tmarg.rel<- addmargins(f.rel)) 


# B) Estimar las siguientes probabilidades:

x<-c(0:6) # Establecer rango de valores para x - Goles en casa
y<-c(0:5) # Establecer rango de valores para y - Goles como visitante

(x.goal<-sample(x, 1, F)) # Generar un valor dentro del rango
(y.goal<-sample(y, 1, F))

# b.1 La probabilidad (marginal) de que el equipo en casa anote x goles (x = 0, 1, 2, ...)
tmarg.rel[x.goal+1, "Sum"] # Se suma uno por considerar fila 1 Goles cero
paste("La probabilidad marginal que un equipo en casa anote", 
      x.goal, "goles es", round(tmarg.rel[x.goal+1, "Sum"]*100,2), "%")

# b.2 La probabilidad (marginal) de que el equipo 
#que juega como visitante anote y goles (y = 0, 1, 2, ...)
tmarg.rel["Sum",y.goal+1]
paste("La probabilidad marginal que un equipo visitante anote", 
      y.goal, "goles es", round(tmarg.rel["Sum",y.goal+1]*100,2),"%")

# b.3 La probabilidad (conjunta) de que el equipo en casa anote x goles
#y el equipo visitante anote y goles (x = 0, 1, 2, ..., y = 0, 1, 2, ...)

tmarg.rel[x.goal+1,y.goal+1] #Recuperar la coordenada de la prob conjunta

paste("La probabilidad conjunta que un equipo en casa anote", 
      x.goal, "goles y el visitante meta", y.goal, 
      "es", round(tmarg.rel[x.goal+1,y.goal+1]*100,2), "%")
tmarg.rel

write.csv(tmarg.rel, file= "TablaProbabilidad.csv")
############################################################################

# POSTWORK 02

# install.packages("lubridate")
# install.packages("tidyverse")
library(dplyr)
library(lubridate)
library(tidyverse)

#Establecer directorio de trabajo
setwd("")
dir()

#Cargar archivo en vector
liga2019<-read.csv("LigaPrimeraDiv-2019-20.csv") 
liga2018<-read.csv("LigaPrimeraDiv-2018-19.csv")
liga2017 <-read.csv("LigaPrimeraDiv-17-18.csv") 
#correction2017<-read.csv("LigaPrimeraDiv-2017-18.csv")

# 1) Revisa la estructura de los data frames 
# usando las funciones: str, head, View y summary

str(liga2019) #Archivo con columna extra, Cambiar el tipo de dato de DATE
head(liga2019)
summary(liga2019)
View(liga2019)

str(liga2018) # Cambiar el tipo de dato de DATE
head(liga2018)
summary(liga2018)
View(liga2018)

str(liga2017) # Archivo con formato de año diferente
head(liga2017)
summary(liga2017)
View(liga2017)

# 2) Con la función select del paquete dplyr, selecciona únicamente las columnas:
# Date, HomeTeam, AwayTeam, FTHG, FTAG y FTR; 
# para cada uno de los data frames. (Hint: también puedes usar lapply).

liga2019<-liga2019[,-3] # Eliminar columna TIME
teams2019<- select (liga2019,Date:FTR)
teams2018<- select (liga2018,Date:FTR)
teams2017<- select (liga2017,Date:FTR)

teams2017$Date <-sub("/17","/2017",teams2017$Date) # Corregir formato año
teams2017$Date <-sub("/18","/2018",teams2017$Date)

substr(teams2017$Date,6,6)<-"/20" # Intento de sustitución
# substr(object for replacement, start character, end character)<-"Replacement String"

# 3) Con ayuda de la función rbind, forma un único data frame que contenga
# las seis columnas mencionadas en el punto 3 (
#Hint 2: la función do.call podría ser utilizada).

firstmerge<-rbind(teams2017,teams2018)
teams1719<-rbind(firstmerge, teams2019)

# 4) Asegúrate que los elementos de las columnas correspondientes de 
# los nuevos data frames sean del mismo tipo
#Hint 1: usa as.Date y mutate para arreglar las fechas 
str(teams2019)
teams1719<-mutate(teams1719, Date=as.Date(Date,"%d/%m/%Y"))
teams1719
str(teams1719)
write.csv(teams1719, file= "goals17-19.csv")


###############################################################################

# POSTWORK 03   Objetivo
# Realizar descarga de archivos desde internet
# Generar nuevos data frames
# Visualizar probabilidades estimadas con la ayuda de gráficas

library(dplyr)
library(ggplot2)
library(plotly)
library(scales)

# Desarrollo
# Graficar las probabilidades (estimadas) marginales y conjuntas 
#para el número de goles que anotan en un partido el equipo de casa o visitante.

# A) Con el último data frame obtenido en el postwork de la sesión 2, 
#elabora tablas de frecuencias relativas para estimar las sig. probabilidades:
goles.new<- read.csv("goals17-19.csv")
# goles.new<-select(teams1719,FTHG:FTAG)# Seleccionar columnas de goles

# a.1 Obtener tabla de frecuencia absoluta
goles.new <- select(goles.new, FTHG:FTAG)
f.abs <- table(goles.new)
# a.2 Obtener tabla de frecuencia relativa
(f.rel<- round(prop.table(f.abs, margin=NULL),3)) #Global
# a.3 Agregar columna de totales marginales sobre frecuencia relativa
(tmarg.rel<- addmargins(f.rel)) 

write.csv(tmarg.rel, file= "ProbRel.17-19.csv") 

pr.goal<-read.csv("ProbRel.Head.csv")
names(pr.goal) # Nuevo archivo renombrando los encabezado

# B) La probabilidad (marginal) de que el equipo que juega en casa anote x goles 
#(x=0,1,2,)
x<-c(0:8) # Establecer rango de valores para x - Goles en casa
y<-c(0:6) # Establecer rango de valores para y - Goles como visitante

(x.goal<-sample(x, 1, F)) # Generar un valor dentro del rango
(y.goal<-sample(y, 1, F))

pr.goal[x.goal+1, "HSum"]
paste("La probabilidad marginal que un equipo en casa anote", 
      x.goal, "goles es", round(pr.goal[x.goal+1, "HSum"]*100,2), "%")

# C) La probabilidad (marginal) de que el equipo visitante anote y goles (y=0,1,2,)
pr.goal["ASum",y.goal+1]
paste("La probabilidad marginal que un equipo visitante anote", 
      y.goal, "goles es", round(pr.goal["ASum",y.goal+1]*100,2),"%")

# D) La probabilidad (conjunta) de que el equipo que juega en casa anote x goles 
#y el equipo que juega como visitante anote y goles (x=0,1,2,, y=0,1,2,)
pr.goal[x.goal+1,y.goal+1] #Recuperar la coordenada producida

paste("La probabilidad conjunta que un equipo en casa anote", 
      x.goal, "goles y el visitante meta", y.goal, 
      "es", round(pr.goal[x.goal+1,y.goal+1]*100,2), "%")
pr.goal

# Realiza lo siguiente:
# E) Un gráfico de barras para las probabilidades marginales estimadas 
#del número de goles que anota el equipo de casa.

no.sumH <- pr.goal[-10,] # Eliminar fila de suma
goals.home<- c(0:8)

bm.home<- ggplot(no.sumH,aes(x=goals.home, y= HSum))+ geom_col()
ggplotly(bm.home)

ggplotly(bm.home)

?ggplotly
?geom_col

# F) Un gráfico de barras para las probabilidades marginales estimadas 
#del número de goles que anota el equipo visitante.

t.probgoal <- as.data.frame(t(pr.goal)) # Invertir filas por columnas
no.sumA <- t.probgoal[-8,] # Eliminar fila de suma
goals.away<- c(0:6)   

bm.away<- ggplot(no.sumA,aes(x=goals.away, y= ASum))+ geom_col()
ggplotly(bm.away)

# G) Un HeatMap para las probabilidades conjuntas estimadas de los números
# de goles que anotan el equipo de casa y el equipo visitante en un partido.

p.con<-read.csv("C:/Users/avila/Documents/Files-R/PWS01/PC-HeatMap.csv")
# Archivo reorganizado en tres columnas

g.heatmap <- ggplot(data = data.frame(p.con), aes(x = HG, y = AG, fill= ProbCon))+
  geom_tile()

ggplotly(g.heatmap)

###############################################################################

# POSTWORK 04 Objetivo
# Investigar la dependencia o independecia de las variables aleatorias X y Y, 
# el número de goles anotados por el equipo de casa y por el equipo visitante.

# Desarrollo
# Ahora investigarás la dependencia o independencia del número de goles anotados 
# por el equipo de casa y los anotados por el equipo visitante mediante 
# un procedimiento denominado bootstrap, 
# Revisar bibliografía en internet para tener nociones de este desarrollo.
# install.packages("boot")
library(boot)

# Obtén una tabla de cocientes al dividir estas probabilidades conjuntas 
# por el producto de las probabilidades marginales correspondientes.
cociente.h <- apply(pr.goal[1:8], 2,function(x) x/pr.goal$HSum)
cociente.a <- apply(t.probgoal [1:10], 2,function(x) x/t.probgoal$ASum)

# Mediante un procedimiento de boostrap, obtén más cocientes similares 
# a los obtenidos en la tabla del punto anterior. 
# Esto para tener una idea de las distribuciones de la cual vienen 
# los cocientes en la tabla anterior. 


# Menciona en cuáles casos le parece razonable suponer que los cocientes 
# de la tabla en el punto 1, son iguales a 1 
# (en tal caso tendríamos independencia de las variables aleatorias X y Y).
